def get_gemm_op_MNKList():

    Transformer_MList = [(x, ) for x in [2, 13, 31, 53, 73, 101, 127, 151, 179, 199, 233, 263, 283, 317, 353, 383, 419, 443, 467, 503, 547, 577, 607, 641, 661, 701, 739, 769, 811, 839, 877, 911, 947, 983, 1019, 1049, 1087, 1109, 1153, 1193, 1229, 1277, 1297, 1321, 1381, 1429, 1453, 1487, 1521, 1559, 1597, 1621, 1663, 1697, 1739, 1783, 1823, 1871, 1902, 1949]]
    Transformer_NKList = [(1024, 1024), (4096, 1024), (1024, 4096), (768, 2304), (3072, 768), (768, 3072), (768, 768), (4096, 4096), (15360, 5120), (5120, 5120), (13824, 5120), (5120, 13824), (12288, 4096), (4096, 4096), (11008, 4096), (4096, 11008)]
    Transformer_MNKList = [m + nk for m in Transformer_MList for nk in Transformer_NKList]

    CNN_MList = [(x, ) for x in [1, 2, 4, 8, 16, 32, 64, 128]]
    CNN_NKList = [(12544, 120), (120, 80), (80, 10), (9216, 4096), (4096, 4096), (4096, 1000), (25088, 4096), (512, 1000), (1024, 1000), (25088, 1000)]
    CNN_MNKList = [m + nk for m in CNN_MList for nk in CNN_NKList]

    DeepBench_MNKList = [(5124,700,2048), (35,700,2048), (5124,700,2560), (35,700,2560), (5124,1500,2048), (35,1500,2048), (5124,1500,2560), (35,1500,2560), (7680,1,2560), (7680,2,2560), (7680,4,2560), (3072,1,1024), (3072,2,1024), (3072,4,1024), (64,1,1216), (512,1,500000), (1024,1,500000), (512,2,500000), (1024,2,500000), (512,4,500000), (1024,4,500000), (1024,700,512), (7680,1500,2560), (6144,1500,2048), (4608,1500,1536), (8448,1500,2816), (3072,1500,1024), (7680,3000,2560), (6144,3000,2048), (4608,3000,1536), (8448,3000,2816), (3072,3000,1024), (7680,6000,2560), (6144,6000,2048), (4608,6000,1536), (8448,6000,2816), (3072,6000,1024), (6144,1,2048), (4608,1,1536), (8448,1,2816), (6144,2,2048), (4608,2,1536), (8448,2,2816), (6144,4,2048), (4608,4,1536), (8448,4,2816), (128,1500,1280), (3072,1500,128), (128,1,1024), (3072,1,128), (176,1500,1408), (4224,1500,176), (128,1,1408), (4224,1,128), (512,1500,2816), (512,1500,2048), (512,1500,2560), (512,1500,1530), (1024,1500,2816), (1024,1500,2048), (1024,1500,2560), (1024,1500,1530), (512,1,512), (1024,1,512), (512,3000,2816), (512,3000,2048), (512,3000,2560), (512,3000,1530), (1024,3000,2816), (1024,3000,2048), (1024,3000,2560), (1024,3000,1530), (512,2,512), (1024,2,512), (512,6000,2816), (512,6000,2048), (512,6000,2560), (512,6000,1530), (1024,6000,2816), (1024,6000,2048), (1024,6000,2560), (1024,6000,1530), (512,4,512), (1024,4,512)]

    GNN_MNKList = [(2708,16,1433), (3327,16,3703), (19717,16,500), (56944,16,50), (410236,16,96), (50515,16,100), (334863,16,96), (88784,16,128), (403394,16,96), (43466,16,29), (1889542,16,66), (1710902,16,74), (334925,16,89), (580768,16,1323), (1888584,16,66), (2708,7,16), (3327,6,16), (19717,3,16), (56944,121,16), (410236,22,16), (50515,12,16), (334863,22,16), (88784,39,16), (403394,22,16), (43466,2,16), (1889542,2,16), (1710902,2,16), (334925,2,16), (580768,2,16), (1888584,2,16), (2708,8,1433), (3327,8,3703), (19717,8,500), (56944,8,50), (410236,8,96), (50515,8,100), (334863,8,96), (88784,8,128), (403394,8,96), (43466,8,29), (1889542,8,66), (1710902,8,74), (334925,8,89), (580768,8,1323), (1888584,8,66), (2708,7,8), (3327,6,8), (19717,3,8), (56944,121,8), (410236,22,8), (50515,12,8), (334863,22,8), (88784,39,8), (403394,22,8), (43466,2,8), (1889542,2,8), (1710902,2,8), (334925,2,8), (580768,2,8), (1888584,2,8), (2708,32,1433), (3327,32,3703), (19717,32,500), (56944,32,50), (410236,32,96), (50515,32,100), (334863,32,96), (88784,32,128), (403394,32,96), (43466,32,29), (1889542,32,66), (1710902,32,74), (334925,32,89), (580768,32,1323), (1888584,32,66), (2708,7,32), (3327,6,32), (19717,3,32), (56944,121,32), (410236,22,32), (50515,12,32), (334863,22,32), (88784,39,32), (403394,22,32), (43466,2,32), (1889542,2,32), (1710902,2,32), (334925,2,32), (580768,2,32), (1888584,2,32), (2708,64,1433), (3327,64,3703), (19717,64,500), (56944,64,50), (410236,64,96), (50515,64,100), (334863,64,96), (88784,64,128), (403394,64,96), (43466,64,29), (1889542,64,66), (1710902,64,74), (334925,64,89), (580768,64,1323), (1888584,64,66), (2708,7,64), (3327,6,64), (19717,3,64), (56944,121,64), (410236,22,64), (50515,12,64), (334863,22,64), (88784,39,64), (403394,22,64), (43466,2,64), (1889542,2,64), (1710902,2,64), (334925,2,64), (580768,2,64), (1888584,2,64), (2708,128,1433), (3327,128,3703), (19717,128,500), (56944,128,50), (410236,128,96), (50515,128,100), (334863,128,96), (88784,128,128), (403394,128,96), (43466,128,29), (1889542,128,66), (1710902,128,74), (334925,128,89), (580768,128,1323), (1888584,128,66), (2708,7,128), (3327,6,128), (19717,3,128), (56944,121,128), (410236,22,128), (50515,12,128), (334863,22,128), (88784,39,128), (403394,22,128), (43466,2,128), (1889542,2,128), (1710902,2,128), (334925,2,128), (580768,2,128), (1888584,2,128)]

    return Transformer_MNKList + CNN_MNKList + DeepBench_MNKList + GNN_MNKList

def get_llm_opset_MNKList():

    MList = [(x, ) for x in [2, 13, 31, 53, 73, 101, 127, 151, 179, 199, 233, 263, 283, 317, 353, 383, 419, 443, 467, 503, 547, 577, 607, 641, 661, 701, 739, 769, 811, 839, 877, 911, 947, 983, 1019, 1049, 1087, 1109, 1153, 1193, 1229, 1277, 1297, 1321, 1381, 1429, 1453, 1487, 1521, 1559, 1597, 1621, 1663, 1697, 1739, 1783, 1823, 1871, 1902, 1949]]
    Bert_NKList = [(768, 768)] * 49 + [(768, 3072)] * 12 + [(3072, 768)] * 12
    LLAMA2_NKList = [(12288, 4096), (4096, 4096), (11008, 4096), (4096, 11008)]
    GPT2_NKList = [(768, 2304)] * 24 + [(3072, 768)] * 48 + [(768, 3072)] * 24
    Bert_MNKList = [m + nk for m in MList for nk in Bert_NKList]
    LLAMA2_MNKList = [m + nk for m in MList for nk in LLAMA2_NKList]
    GPT2_MNKList = [m + nk for m in MList for nk in GPT2_NKList]

    return Bert_MNKList, LLAMA2_MNKList, GPT2_MNKList

def get_conv_op_shape_list():

    CNN_BatchList = [1, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64]
    CNN_shape_list_without_batch = [(3, 224, 224, 96, 11, 11, 4, 0),(96, 26, 26, 256, 5, 5, 1, 2),(256, 12, 12, 384, 3, 3, 1, 1),(384, 12, 12, 384, 3, 3, 1, 1),(384, 12, 12, 256, 3, 3, 1, 1),(3, 224, 224, 64, 7, 7, 2, 3),(64, 56, 56, 192, 3, 3, 1, 1),(192, 28, 28, 64, 1, 1, 1, 0),(192, 28, 28, 96, 1, 1, 1, 0),(96, 28, 28, 128, 3, 3, 1, 1),(192, 28, 28, 16, 1, 1, 1, 0),(16, 28, 28, 32, 5, 5, 1, 2),(192, 28, 28, 32, 1, 1, 1, 0),(256, 28, 28, 128, 1, 1, 1, 0),(256, 28, 28, 128, 1, 1, 1, 0),(128, 28, 28, 192, 3, 3, 1, 1),(256, 28, 28, 32, 1, 1, 1, 0),(32, 28, 28, 96, 5, 5, 1, 2),(256, 28, 28, 64, 1, 1, 1, 0),(480, 14, 14, 192, 1, 1, 1, 0),(480, 14, 14, 96, 1, 1, 1, 0),(96, 14, 14, 208, 3, 3, 1, 1),(480, 14, 14, 16, 1, 1, 1, 0),(16, 14, 14, 48, 5, 5, 1, 2),(480, 14, 14, 64, 1, 1, 1, 0),(512, 14, 14, 160, 1, 1, 1, 0),(512, 14, 14, 112, 1, 1, 1, 0),(112, 14, 14, 224, 3, 3, 1, 1),(512, 14, 14, 24, 1, 1, 1, 0),(25, 14, 14, 64, 5, 5, 1, 2),(512, 14, 14, 64, 1, 1, 1, 0),(512, 14, 14, 128, 1, 1, 1, 0),(512, 14, 14, 128, 1, 1, 1, 0),(128, 14, 14, 256, 3, 3, 1, 1),(512, 14, 14, 24, 1, 1, 1, 0),(24, 14, 14, 64, 5, 5, 1, 2),(512, 14, 14, 64, 1, 1, 1, 0),(512, 14, 14, 112, 1, 1, 1, 0),(512, 14, 14, 144, 1, 1, 1, 0),(144, 14, 14, 288, 3, 3, 1, 1),(512, 14, 14, 32, 1, 1, 1, 0),(32, 14, 14, 64, 5, 5, 1, 2),(512, 14, 14, 64, 1, 1, 1, 0),(528, 14, 14, 256, 1, 1, 1, 0),(528, 14, 14, 160, 1, 1, 1, 0),(160, 14, 14, 320, 3, 3, 1, 1),(528, 14, 14, 32, 1, 1, 1, 0),(32, 14, 14, 128, 5, 5, 1, 2),(528, 14, 14, 128, 1, 1, 1, 0),(832, 7, 7, 256, 1, 1, 1, 0),(832, 7, 7, 160, 1, 1, 1, 0),(832, 7, 7, 320, 3, 3, 1, 1),(320, 7, 7, 32, 1, 1, 1, 0),(32, 7, 7, 128, 5, 5, 1, 2),(832, 7, 7, 128, 1, 1, 1, 0),(832, 7, 7, 384, 1, 1, 1, 0),(832, 7, 7, 192, 1, 1, 1, 0),(192, 7, 7, 384, 3, 3, 1, 1),(832, 7, 7, 48, 1, 1, 1, 0),(48, 7, 7, 128, 5, 5, 1, 2),(832, 7, 7, 128, 1, 1, 1, 0),(3, 224, 224, 64, 3, 3, 1, 1),(64, 224, 224, 64, 3, 3, 1, 1),(64, 112, 112, 128, 3, 3, 1, 1),(128, 112, 112, 128, 3, 3, 1, 1),(128, 56, 56, 256, 3, 3, 1, 1),(256, 56, 56, 256, 3, 3, 1, 1),(256, 56, 56, 256, 3, 3, 1, 1),(256, 56, 56, 256, 3, 3, 1, 1),(256, 28, 28, 512, 3, 3, 1, 1),(512, 28, 28, 512, 3, 3, 1, 1),(512, 28, 28, 512, 3, 3, 1, 1),(512, 28, 28, 512, 3, 3, 1, 1),(512, 14, 14, 512, 3, 3, 1, 1),(512, 14, 14, 512, 3, 3, 1, 1),(512, 14, 14, 512, 3, 3, 1, 1),(512, 14, 14, 512, 3, 3, 1, 1),(3, 224, 224, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 128, 3, 3, 2, 1),(128, 56, 56, 128, 3, 3, 1, 1),(64, 112, 112, 128, 1, 1, 2, 0),(128, 56, 56, 128, 3, 3, 1, 1),(128, 56, 56, 128, 3, 3, 1, 1),(128, 56, 56, 256, 3, 3, 2, 1),(256, 28, 28, 256, 3, 3, 1, 1),(128, 56, 56, 256, 1, 1, 2, 0),(256, 28, 28, 256, 3, 3, 1, 1),(256, 28, 28, 256, 3, 3, 1, 1),(256, 28, 28, 512, 3, 3, 2, 1),(512, 28, 28, 512, 3, 3, 1, 1),(256, 28, 28, 512, 1, 1, 2, 0),(512, 14, 14, 512, 3, 3, 1, 1),(512, 14, 14, 512, 3, 3, 1, 1)]
    CNN_shape_list = [(batch,) + shape for batch in CNN_BatchList for shape in CNN_shape_list_without_batch]
    DeepBench_shape_list = [(1, 1, 161, 700, 32, 5, 20, 2, 0),(2, 1, 161, 700, 32, 5, 20, 2, 0),(4, 1, 161, 700, 32, 5, 20, 2, 0),(1, 32, 79, 341, 32, 5, 10, 2, 0),(2, 32, 79, 341, 32, 5, 10, 2, 0),(4, 32, 79, 341, 32, 5, 10, 2, 0),(1, 1, 48, 480, 16, 3, 3, 1, 1),(1, 16, 24, 240, 32, 3, 3, 1, 1),(1, 32, 12, 120, 64, 3, 3, 1, 1),(1, 64, 6, 60, 128, 3, 3, 1, 1),(1, 3, 108, 108, 64, 3, 3, 2, 1),(1, 64, 54, 54, 64, 3, 3, 1, 1),(1, 128, 27, 27, 128, 3, 3, 1, 1),(1, 128, 14, 14, 256, 3, 3, 1, 1),(1, 256, 7, 7, 512, 3, 3, 1, 1),(1, 3, 224, 224, 64, 3, 3, 1, 1),(1, 64, 112, 112, 128, 3, 3, 1, 1),(1, 128, 56, 56, 256, 3, 3, 1, 1),(1, 256, 28, 28, 512, 3, 3, 1, 1),(1, 512, 14, 14, 512, 3, 3, 1, 1),(1, 512, 7, 7, 512, 3, 3, 1, 1),(2, 3, 224, 224, 64, 3, 3, 1, 1),(2, 64, 112, 112, 128, 3, 3, 1, 1),(2, 128, 56, 56, 256, 3, 3, 1, 1),(2, 256, 28, 28, 512, 3, 3, 1, 1),(2, 512, 14, 14, 512, 3, 3, 1, 1),(2, 512, 7, 7, 512, 3, 3, 1, 1),(1, 3, 224, 224, 64, 7, 7, 2, 3),(1, 192, 28, 28, 32, 5, 5, 1, 2),(1, 192, 28, 28, 64, 1, 1, 1, 0),(1, 512, 14, 14, 48, 5, 5, 1, 2),(1, 512, 14, 14, 192, 1, 1, 1, 0),(1, 832, 7, 7, 256, 1, 1, 1, 0),(1, 832, 7, 7, 128, 5, 5, 1, 2),(2, 3, 224, 224, 64, 7, 7, 2, 3),(2, 192, 28, 28, 32, 5, 5, 1, 2),(2, 192, 28, 28, 64, 1, 1, 1, 0),(2, 512, 14, 14, 48, 5, 5, 1, 2),(2, 512, 14, 14, 192, 1, 1, 1, 0),(2, 832, 7, 7, 256, 1, 1, 1, 0),(2, 832, 7, 7, 128, 5, 5, 1, 2),(1, 64, 56, 56, 64, 3, 3, 1, 1),(1, 64, 56, 56, 256, 1, 1, 2, 0),(1, 128, 28, 28, 128, 3, 3, 1, 1),(1, 128, 28, 28, 512, 1, 1, 2, 0),(1, 256, 14, 14, 256, 1, 1, 1, 0),(1, 256, 14, 14, 256, 3, 3, 1, 1),(1, 256, 14, 14, 1024, 1, 1, 2, 0),(1, 512, 7, 7, 512, 1, 1, 1, 0),(1, 2048, 7, 7, 512, 1, 1, 2, 3),(2, 64, 56, 56, 64, 3, 3, 1, 1),(2, 64, 56, 56, 256, 1, 1, 2, 0),(2, 128, 28, 28, 128, 3, 3, 1, 1),(2, 128, 28, 28, 512, 1, 1, 2, 0),(2, 256, 14, 14, 256, 1, 1, 1, 0),(2, 256, 14, 14, 256, 3, 3, 1, 1),(2, 256, 14, 14, 1024, 1, 1, 2, 0),(2, 512, 7, 7, 512, 1, 1, 1, 0),(2, 2048, 7, 7, 512, 1, 1, 2, 3),(1, 1, 161, 700, 64, 5, 5, 2, 1),(1, 64, 80, 350, 64, 3, 3, 1, 1),(1, 64, 80, 350, 128, 5, 5, 2, 1),(1, 128, 40, 175, 128, 3, 3, 1, 1),(1, 128, 40, 175, 256, 5, 5, 2, 1),(1, 256, 20, 84, 256, 3, 3, 1, 1),(1, 256, 20, 84, 512, 5, 5, 2, 1),(1, 512, 10, 42, 512, 3, 3, 1, 1),(2, 1, 161, 700, 64, 5, 5, 2, 1),(2, 64, 80, 350, 64, 3, 3, 1, 1),(2, 64, 80, 350, 128, 5, 5, 2, 1),(2, 128, 40, 175, 128, 3, 3, 1, 1),(2, 128, 40, 175, 256, 5, 5, 2, 1),(2, 256, 20, 84, 256, 3, 3, 1, 1),(2, 256, 20, 84, 512, 5, 5, 2, 1),(2, 512, 10, 42, 512, 3, 3, 1, 1),(1, 64, 112, 112, 64, 1, 1, 1, 0),(1, 64, 56, 56, 256, 1, 1, 1, 0),(1, 256, 56, 56, 64, 1, 1, 1, 0),(1, 256, 56, 56, 128, 1, 1, 2, 0),(1, 128, 28, 28, 512, 1, 1, 1, 0),(1, 512, 28, 28, 128, 1, 1, 1, 0),(1, 512, 28, 28, 256, 1, 1, 2, 0),(1, 256, 14, 14, 1024, 1, 1, 1, 0),(1, 512, 28, 28, 1024, 1, 1, 2, 0),(1, 1024, 14, 14, 256, 1, 1, 1, 0),(1, 256, 14, 14, 1024, 1, 1, 1, 0),(1, 1024, 14, 14, 512, 1, 1, 2, 0),(1, 512, 7, 7, 512, 3, 3, 1, 1),(1, 512, 7, 7, 2048, 1, 1, 1, 0),(1, 1024, 14, 14, 2048, 1, 1, 2, 0),(1, 2048, 7, 7, 512, 1, 1, 1, 0),(2, 64, 112, 112, 64, 1, 1, 1, 0),(2, 64, 56, 56, 256, 1, 1, 1, 0),(2, 256, 56, 56, 64, 1, 1, 1, 0),(2, 256, 56, 56, 128, 1, 1, 2, 0),(2, 128, 28, 28, 512, 1, 1, 1, 0),(2, 512, 28, 28, 128, 1, 1, 1, 0),(2, 512, 28, 28, 256, 1, 1, 2, 0),(2, 256, 14, 14, 1024, 1, 1, 1, 0),(2, 512, 28, 28, 1024, 1, 1, 2, 0),(2, 1024, 14, 14, 256, 1, 1, 1, 0),(2, 256, 14, 14, 1024, 1, 1, 1, 0),(2, 1024, 14, 14, 512, 1, 1, 2, 0),(2, 512, 7, 7, 512, 3, 3, 1, 1),(2, 512, 7, 7, 2048, 1, 1, 1, 0),(2, 1024, 14, 14, 2048, 1, 1, 2, 0),(2, 2048, 7, 7, 512, 1, 1, 1, 0)]

    return CNN_shape_list + DeepBench_shape_list

def get_cnn_opset_shape_List():

    CNN_BatchList = [1, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64]
    AlexNet_MNKList_without_batch = [(3, 224, 224, 96, 11, 11, 4, 0),(96, 26, 26, 256, 5, 5, 1, 2),(256, 12, 12, 384, 3, 3, 1, 1),(384, 12, 12, 384, 3, 3, 1, 1),(384, 12, 12, 256, 3, 3, 1, 1)]
    ResNet_MNKList_without_batch = [(3, 224, 224, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 64, 3, 3, 1, 1),(64, 112, 112, 128, 3, 3, 2, 1),(128, 56, 56, 128, 3, 3, 1, 1),(64, 112, 112, 128, 1, 1, 2, 0),(128, 56, 56, 128, 3, 3, 1, 1),(128, 56, 56, 128, 3, 3, 1, 1),(128, 56, 56, 256, 3, 3, 2, 1),(256, 28, 28, 256, 3, 3, 1, 1),(128, 56, 56, 256, 1, 1, 2, 0),(256, 28, 28, 256, 3, 3, 1, 1),(256, 28, 28, 256, 3, 3, 1, 1),(256, 28, 28, 512, 3, 3, 2, 1),(512, 28, 28, 512, 3, 3, 1, 1),(256, 28, 28, 512, 1, 1, 2, 0),(512, 14, 14, 512, 3, 3, 1, 1),(512, 14, 14, 512, 3, 3, 1, 1)]
    GoogleNet_MNKList_without_batch = [(3, 224, 224, 64, 7, 7, 2, 3),(64, 56, 56, 192, 3, 3, 1, 1),(192, 28, 28, 64, 1, 1, 1, 0),(192, 28, 28, 96, 1, 1, 1, 0),(96, 28, 28, 128, 3, 3, 1, 1),(192, 28, 28, 16, 1, 1, 1, 0),(16, 28, 28, 32, 5, 5, 1, 2),(192, 28, 28, 32, 1, 1, 1, 0),(256, 28, 28, 128, 1, 1, 1, 0),(256, 28, 28, 128, 1, 1, 1, 0),(128, 28, 28, 192, 3, 3, 1, 1),(256, 28, 28, 32, 1, 1, 1, 0),(32, 28, 28, 96, 5, 5, 1, 2),(256, 28, 28, 64, 1, 1, 1, 0),(480, 14, 14, 192, 1, 1, 1, 0),(480, 14, 14, 96, 1, 1, 1, 0),(96, 14, 14, 208, 3, 3, 1, 1),(480, 14, 14, 16, 1, 1, 1, 0),(16, 14, 14, 48, 5, 5, 1, 2),(480, 14, 14, 64, 1, 1, 1, 0),(512, 14, 14, 160, 1, 1, 1, 0),(512, 14, 14, 112, 1, 1, 1, 0),(112, 14, 14, 224, 3, 3, 1, 1),(512, 14, 14, 24, 1, 1, 1, 0),(25, 14, 14, 64, 5, 5, 1, 2),(512, 14, 14, 64, 1, 1, 1, 0),(512, 14, 14, 128, 1, 1, 1, 0),(512, 14, 14, 128, 1, 1, 1, 0),(128, 14, 14, 256, 3, 3, 1, 1),(512, 14, 14, 24, 1, 1, 1, 0),(24, 14, 14, 64, 5, 5, 1, 2),(512, 14, 14, 64, 1, 1, 1, 0),(512, 14, 14, 112, 1, 1, 1, 0),(512, 14, 14, 144, 1, 1, 1, 0),(144, 14, 14, 288, 3, 3, 1, 1),(512, 14, 14, 32, 1, 1, 1, 0),(32, 14, 14, 64, 5, 5, 1, 2),(512, 14, 14, 64, 1, 1, 1, 0),(528, 14, 14, 256, 1, 1, 1, 0),(528, 14, 14, 160, 1, 1, 1, 0),(160, 14, 14, 320, 3, 3, 1, 1),(528, 14, 14, 32, 1, 1, 1, 0),(32, 14, 14, 128, 5, 5, 1, 2),(528, 14, 14, 128, 1, 1, 1, 0),(832, 7, 7, 256, 1, 1, 1, 0),(832, 7, 7, 160, 1, 1, 1, 0),(832, 7, 7, 320, 3, 3, 1, 1),(320, 7, 7, 32, 1, 1, 1, 0),(32, 7, 7, 128, 5, 5, 1, 2),(832, 7, 7, 128, 1, 1, 1, 0),(832, 7, 7, 384, 1, 1, 1, 0),(832, 7, 7, 192, 1, 1, 1, 0),(192, 7, 7, 384, 3, 3, 1, 1),(832, 7, 7, 48, 1, 1, 1, 0),(48, 7, 7, 128, 5, 5, 1, 2),(832, 7, 7, 128, 1, 1, 1, 0)]

    AlexNet_MNKList = [(batch,) + shape for batch in CNN_BatchList for shape in AlexNet_MNKList_without_batch]
    ResNet_MNKList = [(batch,) + shape for batch in CNN_BatchList for shape in ResNet_MNKList_without_batch]
    GoogleNet_MNKList = [(batch,) + shape for batch in CNN_BatchList for shape in GoogleNet_MNKList_without_batch]

    return AlexNet_MNKList, ResNet_MNKList, GoogleNet_MNKList